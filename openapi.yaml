openapi: 3.1.0
info:
  title: Tiger Claws
  description: |
    "This API allows for admin/professor users to create, edit, and delete sections for courses 
    It allows for student users to register, waitlist, favorite, and drop course
    It allows admin to add and drop students from courses"
  license:
    name: "ISC"
  version: 0.1.0
paths:
  /account:
    get:
      summary: "Gets the account of a user"
      description: "Authroizes the account of the user and returns a response based on the authentication"
      paramaters:
        - name: "Authorizarion Token"
          in: header
          schema:
            type: string
          required: true
      resposes:
        "401":
          description: "Account does not exist"
        "200":
          description: "Account does exist"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: string
                  isMock: 
                    type: boolean
                  role: 
                    type: string
                    enum:
                      - "ADMINSTRATOR"
                      - "STUDENT"
                      - "PROFESSOR"
                  fistName:
                    type: string
                  lastName:
                    type: string
                  instructingIds:
                    type: array
                    items: string
  /courses:
    get:
      summary: Gets the course
      description: Retrieves courses given specific criteria
      parameters:
        - name: "???"
          in: query
          schema: "???"
      responses:
        "???":
          description: "???"
          content: "???"
    post:
      summary: Posts a course
      description: Adds a new course to the database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                term: 
                  type: string
                  enum:
                    - "SPRING_2021"
                    - "FALL_2021"
                    - "SPRING_2022"
                    - "FALL_2022"
                    - "SPRING_2023"
                department: 
                  type: string
                  enum:
                    - "ART_HISTORY"
                    - "BIOLOGY"
                    - "CHEMISTRY"
                    - "CLASSICAL_STUDIES"
                    - "COMMUNICATION"
                    - "COMPUTER_SCIENCE"
                    - "ECONOMICS"
                    - "EDUCATION"
                    - "ENGINEERING_SCIENCE"
                    - "ENGLISH"
                    - "GEOSCIENCES"
                    - "HEALTH_CARE_ADMINISTRATION"
                    - "HISTORY"
                    - "MATHMATICS"
                    - "MUSIC"
                    - "PHILLOSOPHY"
                code:
                  type: number
                description:
                  type: string
      responses:
        "201":
          descritption: Course created successfully
  /courses/{courseId}:
    get: 
      summary: Gets the course with the specific ID
      description: Retrieves a course based on the course ID
      parameters:
        - name: courseId
          in: path
      responses:
        "200":
          description: "Course successfully retrieved by ID"
          content: 
            application/json:
              schema:
                $ref: '#/prisma/schema.prisma/Course'
    put:
      summary: Updates information on course using ID
      description: Updates the specific information on a course using its ID
      parameters:
        - name: courseId
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                term: 
                  type: string
                  enum:
                    - "SPRING_2021"
                    - "FALL_2021"
                    - "SPRING_2022"
                    - "FALL_2022"
                    - "SPRING_2023"
                department: 
                  type: string
                  enum:
                    - "ART_HISTORY"
                    - "BIOLOGY"
                    - "CHEMISTRY"
                    - "CLASSICAL_STUDIES"
                    - "COMMUNICATION"
                    - "COMPUTER_SCIENCE"
                    - "ECONOMICS"
                    - "EDUCATION"
                    - "ENGINEERING_SCIENCE"
                    - "ENGLISH"
                    - "GEOSCIENCES"
                    - "HEALTH_CARE_ADMINISTRATION"
                    - "HISTORY"
                    - "MATHMATICS"
                    - "MUSIC"
                    - "PHILLOSOPHY"
                code:
                  type: number
                description:
                  type: string
      responses:
        "200":
          description: "Updated course successfully"
          content:
            application/json:
              schema:
                $ref: '#/prisma/schema.prisma/Course'
    delete:
      summary: Deletes the given course using ID
      description: Removes the course from the database using the given ID
      paramaters:
        - name: courseId
          in: path
      response:
        "200":
          description: "Successfuly deleted the course"
          content: 
            "???"
  /courses/{courseId}/sections:
    post:
      summary: Posts a new course section
      description: Creates a new course section and adds it to the database
      parameters: 
        - name: courseId
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object  
              properties:
                daysOfWeek:
                  type: string
                  enum:
                    - "MONDAY"
                    - "TUESDAY" 
                    - "WEDNESDAY"
                    - "THURSDAY"
                    - "FRIDAY"
                    - "SATURDAY"
                    - "SUNDAY"
                startTime:
                  type: string
                endTime:
                  type: string
                location:
                  type: string
      responses:
        "400":
          description: "Invalid meeting time"
        "201":
          description: "Section successfully created"
          content:
            application/json:
              schema:
                $ref: '#/prisma/schema.prisma/CourseSection'

    
                
          

      
  /options:
    get:
      summary: Gets different options
      description: "???"
      parameters:
      responses:
      "200"
        description: "Everything looks good"
        content:
 /tokens:
    post:
      summary: Creates a token(?)
      description: "???"
      parameters:
      responses:
      "400"
        description: "Mock user not able to use token service"
        content:
      "201"
        description: "Successful token service"
        content:
  /users:
    get:
      summary: Checks who is the user
      description: Takes email and searches for user
      parameters:
      responses:
        description: 
        content:
    post:
      summary: Creates a new user
      description: 
      parameters:
      responses:
      "201"
        description: "Successful user creation"
        content:


      